// üîë –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º MainTmaScreen
import 'package:flutter_application_1/screens/main_tma_screen.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';

import 'package:flutter_application_1/data/auth/auth_notifier.dart';
// –ò–º–ø–æ—Ä—Ç —ç–∫—Ä–∞–Ω–æ–≤
import 'package:flutter_application_1/screens/university_selection_screen.dart';
import 'package:flutter_application_1/screens/login_screen.dart';

// --- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ ---
class AppRoutes {
  static const universitySelection =
      '/'; // –û—Å—Ç–∞–≤–∏–º –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–π —ç–∫—Ä–∞–Ω (–ø—É–±–ª–∏—á–Ω—ã–π)
  static const login = '/auth'; // –≠–∫—Ä–∞–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø—É–±–ª–∏—á–Ω—ã–π)
  // üîë –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω - —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
  static const quest = '/quest';
  // –ú—ã —É–¥–∞–ª—è–µ–º –ø—Ä—è–º—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –∫ –≤–∫–ª–∞–¥–∫–∞–º, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –≤–Ω—É—Ç—Ä–∏ MainTmaScreen:
  static const quiz =
      '/quiz-tab'; // –£—Å—Ç–∞—Ä–µ–≤—à–∏–π, –Ω–æ –æ—Å—Ç–∞–≤–∏–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
  static const scanQr = '/scan-qr-tab'; // –£—Å—Ç–∞—Ä–µ–≤—à–∏–π
  static const arScanner = '/ar-scan-tab'; // –£—Å—Ç–∞—Ä–µ–≤—à–∏–π
  static const score = '/score-tab'; // –£—Å—Ç–∞—Ä–µ–≤—à–∏–π
}

// –ü—Ä–æ–≤–∞–π–¥–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä GoRouter
final goRouterProvider = Provider<GoRouter>((ref) {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  final isAuthenticated = ref.watch(
    authNotifierProvider.select(
      (asyncValue) => asyncValue.value != null && asyncValue.value!.isNotEmpty,
    ),
  );

  return GoRouter(
    initialLocation: AppRoutes.universitySelection,

    // üîë –ö–õ–Æ–ß–ï–í–û–ô –ú–û–ú–ï–ù–¢: –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
    redirect: (context, state) {
      // –ó–∞—â–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–≤–µ—Å—Ç–∞
      final protectedRoutes = [AppRoutes.quest];
      final goingToProtected = protectedRoutes.any(
        state.matchedLocation.startsWith,
      );

      final goingToPublic =
          state.matchedLocation.startsWith(AppRoutes.universitySelection) ||
          state.matchedLocation.startsWith(AppRoutes.login);

      // 1. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏ –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:
      if (!isAuthenticated && goingToProtected) {
        return AppRoutes.login; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ª–æ–≥–∏–Ω
      }

      // 2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–π—Ç–∏ –Ω–∞ –ø—É–±–ª–∏—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
      if (isAuthenticated && goingToPublic) {
        return AppRoutes.quest; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –∫–≤–µ—Å—Ç–∞
      }

      return null; // –†–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥
    },

    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    routes: [
      // 1. –í—ã–±–æ—Ä –í–£–ó–∞
      GoRoute(
        path: AppRoutes.universitySelection,
        builder: (context, state) => const UniversitySelectionScreen(),
      ),
      // 2. –õ–æ–≥–∏–Ω
      GoRoute(
        path: AppRoutes.login,
        builder: (context, state) => LoginScreen(),
      ),
      // üîë 3. –ì–õ–ê–í–ù–´–ô –≠–ö–†–ê–ù - —ç—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
      GoRoute(
        path: AppRoutes.quest,
        builder: (context, state) =>
            const MainTmaScreen(), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —Ç–µ–ø–µ—Ä—å —è–≤–ª—è—é—Ç—Å—è –≤–∫–ª–∞–¥–∫–∞–º–∏
      ),
      // –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è
      // –≤ –æ—Å–Ω–æ–≤–Ω–æ–º flow. –ï—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –ø—Ä–æ–ø–∏—Å–∞–Ω—ã –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö, –∏—Ö –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
    ],
  );
});
